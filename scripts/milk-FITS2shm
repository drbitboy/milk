#!/usr/bin/env bash

# shared memory log status directory (local)
# can be a symlink to global if needed
logSMstatdir="log-shmimloadstat"

source milk-script-std-config

MSdescr="Load FITS file to shared memory"

MSextdescr="Load FITS file to shared memory

Writes into ./${logSMstatdir}/ what has been loaded.
Unless -f option, will not re-load unchanged files.

In update mode, maintains status in ${logSMstatdir} subdirectory


$(tput bold)EXAMPLES:$(tput sgr0)
   $pname -f image32.fits ims10
        Load image32.fits to stream ims10
        -f option : force load even if image and stream have not changed
        will write \"image32.fits\" into file \"conf/shmim.ims10.name.txt
   echo \"image102.fits\" > conf/shmim.ims10.name.txt
   $pname -c ims10 ims10
        Load image102.fits to stream ims10
        Parameter null will be ignored
   $pname -c -p aol3_ ims10 ims10
        Load image102.fits to stream aol3_ims10
"




RequiredCommands=( milk )
#RequiredFiles=()
#RequiredDirs=()



MSarg+=( "infile:string:input FITS filename, or confname if -c option" )
MSarg+=( "outstream:string:output streamname" )


FORCELOAD=0
MSopt+=( "f:force:set_forceload::force load (even if unchanged file)" )
function set_forceload() {
	FORCELOAD=1
	echo "FORCELOAD set"
}

READFROMCONF=0
MSopt+=( "c:conf:set_confread::read FITS file name from ./conf/shmim.<streamname>.name.txt" )
function set_confread() {
	READFROMCONF=1
	echo "READFROMCONF set"
}


SMPREFIX=""
MSopt+=( "p:prefix:set_prefix:prefix[string]:stream prefix" )
function set_prefix() {
	SMPREFIX="$1"
	echo "Using prefix: ${SMPREFIX}"
}

CLEARSTREAM=0
MSopt+=( "r:reset:set_reset::remove / clear previous stream and associated files" )
function set_reset() {
	CLEARSTREAM="$1"
	echo "CLEARSTREAM is set"
}

UPDATEMODE=0
MSopt+=( "u:update:set_update::update mode, only load if input or output have changed" )
function set_update() {
	UPDATEMODE=1
	echo "UPDATEMODE is set"
}



source milk-argparse

infile="${inputMSargARRAY[0]}"
outstream="${inputMSargARRAY[1]}"




# ======================= CHECK REQUIRED FILES =================================
if [ "$READFROMCONF" = "0" ]; then
    checkFile $1
else
    checkFile conf/shmim.$1.name.txt
fi




if [ "$READFROMCONF" = "0" ]; then
    FITSfname="$infile"
    STREAMname="${SMPREFIX}$outstream"
    STREAMname0="$outstream"
else
	FITSfname=$( cat ./conf/shmim.${infile}.name.txt )
	STREAMname="${SMPREFIX}$outstream"
    STREAMname0="$outstream"
fi


#
# is file a link ?
# if it is, resolve link
#
if [ -L "$FITSfname" ]; then
    flink=$( readlink -f $FITSfname )
    rm -f ${FITSfname}
    rsync -auL ${flink} ${FITSfname}
fi



echo "FITS file   : $FITSfname"
echo "stream name : $STREAMname"

mkdir -p conf




if [ "$CLEARSTREAM" = "1" ]; then # clear stream and associated files
    rm -f ${logSMstatdir}/${STREAMname0}.*
    rm -f $MILK_SHM_DIR/${STREAMname}.im.shm
    rm -f /dev/shm/sem.${STREAMname}.*
    rm -f ./conf/shmim.${STREAMname0}.fits
fi




VERBOSE="1"




if [ "$UPDATEMODE" = "0" ]; then
	LOADfile="1"
	if [ "$VERBOSE" = "1" ]; then
		echo "UPDATEMODE is 0 -> LOADfile = ${LOADfile}"
	fi
	

else
	mkdir -p ${logSMstatdir}
	LOADfile="0"

	# has the file changed since last request ?
	if [ -f "${logSMstatdir}/${STREAMname0}.FITSinfo" ]; then
		cp ${logSMstatdir}/${STREAMname0}.FITSinfo ${logSMstatdir}/${STREAMname0}.FITSinfo.old
		str1=$(cat ${logSMstatdir}/${STREAMname0}.FITSinfo.old)
	else
		str1=""
	fi
	stat -L --format "%n %s %y" ${FITSfname} > ${logSMstatdir}/${STREAMname0}.FITSinfo


	str2=$(cat ${logSMstatdir}/${STREAMname0}.FITSinfo)
	if [ "$str1" = "$str2" ]; then
		touch ${logSMstatdir}/${STREAMname0}.FITSsame
		rm -f ${logSMstatdir}/${STREAMname0}.FITSchanged &> /dev/null
		NEW="0"
		if [ "$VERBOSE" = "1" ]; then
			echo "======= FITS file unchanged ========"
			echo "======= LOADfile = $LOADfile ========"
		fi
	else
		rm -f ${logSMstatdir}/${STREAMname0}.FITSsame &> /dev/null
		touch ${logSMstatdir}/${STREAMname0}.FITSchanged
		NEW="1"
		LOADfile="1"
		if [ "$VERBOSE" = "1" ]; then
			echo "======= FITS file changed =========="
			echo "======= LOADfile = $LOADfile ========"
		fi
	fi
	rm -f ${logSMstatdir}/${STREAMname0}.SMloaded.old &> /dev/null


	# has shared memory changed since last request ?

	if [ -f "${logSMstatdir}/${STREAMname0}.SMinfo" ]; then
		cp ${logSMstatdir}/${STREAMname0}.SMinfo ${logSMstatdir}/${STREAMname0}.SMinfo.old
		str1=$(cat ${logSMstatdir}/${STREAMname0}.SMinfo.old)
	else
		str1=""
	fi
	stat -L --format "%n %s %y" $MILK_SHM_DIR/${STREAMname}.im.shm > ${logSMstatdir}/${STREAMname0}.SMinfo
	str2=$(cat ${logSMstatdir}/${STREAMname0}.SMinfo)

	if [ "$str1" = "$str2" ]; then
		touch ${logSMstatdir}/${STREAMname0}.SMsame
		rm -f ${logSMstatdir}/${STREAMname0}.SMchanged &> /dev/null
		NEW_SM="0"
		if [ "$VERBOSE" = "1" ]; then
			echo "======= SM file unchanged ========"
			echo "======= LOADfile = $LOADfile ========"
		fi
	else
		rm -f ${logSMstatdir}/${STREAMname0}.SMsame &> /dev/null
		touch ${logSMstatdir}/${STREAMname0}.SMchanged
		NEW_SM="1"
		LOADfile="1"
		if [ "$VERBOSE" = "1" ]; then
			echo "======= SM file changed =========="
			echo "======= LOADfile = $LOADfile ========"
		fi
	fi
	rm -f ${logSMstatdir}/${STREAMname0}.SMinfo.old &> /dev/null




	if [ ! -f "$MILK_SHM_DIR/${STREAMname}.im.shm" ]; then
		touch ${logSMstatdir}/${STREAMname0}.missing
		LOADfile="1"
		if [ "$VERBOSE" = "1" ]; then
			echo "======= SM file missing =========="
			echo "======= LOADfile = $LOADfile ========"
		fi
	else
		rm -f ${logSMstatdir}/${STREAMname0}.missing &> /dev/null
	fi


	if [ "$FORCELOAD" = "1" ]; then
		LOADfile="1"
		if [ "$VERBOSE" = "1" ]; then
			echo "======= FORCE MODE =========="
			echo "======= LOADfile = $LOADfile ========"
		fi
	fi


	if [ "$VERBOSE" = "1" ]; then
		echo "======= LOADfile = $LOADfile ========"
	fi

fi







if [ "$LOADfile" = "1" ]; then

MILK_QUIET=1 milk -n $pname << EOF
loadfits "${FITSfname}" im
readshmim "${STREAMname}"
imcpshm im "${STREAMname}"
exitCLI
EOF


    # copy imsize to conf
    # cp ${logSMstatdir}/${STREAMname0}.imsize ./conf/shmim.${STREAMname0}.imsize.txt
    # add link to conf
    rm -f ./conf/shmim.${STREAMname0}.fits
    ln -s ${PWD}/${FITSfname} ./conf/shmim.${STREAMname0}.fits

	if [ "$UPDATEMODE" = "1" ]; then
		# write SM stat AFTER it has been updated
MILK_QUIET=1 milk -n $pname << EOF
readshmimsize ${STREAMname} "${logSMstatdir}/${STREAMname0}.imsize"
exitCLI
EOF
		stat -L --format "%n %s %y" $MILK_SHM_DIR/${STREAMname}.im.shm > ${logSMstatdir}/${STREAMname0}.SMinfo
		rm -f ${logSMstatdir}/${STREAMname0}.kept &> /dev/null
		touch ${logSMstatdir}/${STREAMname0}.changed
		cat ${logSMstatdir}/${STREAMname0}.SMinfo
    fi

else
	
	if [ "$UPDATEMODE" = "1" ]; then
		touch ${logSMstatdir}/${STREAMname0}.kept
		rm -f ${logSMstatdir}/${STREAMname0}.changed &> /dev/null
		cat ${logSMstatdir}/${STREAMname0}.SMinfo
	fi

fi
