#!/usr/bin/env bash

# This script uses milk-argparse
# See template milk-scriptexample in module milk_module_example for template and instructions


# script 1-line description
MSdescr="copy stream data contentr"

# Extended description
MSdescr="copy existing stream to other existing stream
streamIN copied to streamOUT upon streamIN post
Both streams should have the same size and format
"

# standard configuration
#
source milk-script-std-config

# prerequisites
#
RequiredCommands=( milk )
RequiredFiles=()
RequiredDirs=()



# SCRIPT ARGUMENTS (mandatory)
# syntax: "name:type(s)/test(s):description"

MSarg+=( "streamnameIN:string:input stream" )
MSarg+=( "streamnameOUT:string:output stream" )

# SCRIPT OPTIONS
# syntax: "short:long:functioncall:args[types]:description"

NBpoke="0"
MSopt+=( "n:nbpoke:set_NBpoke:nbpoke[long]:loopcntmax (0 = single poke) [${NBpoke}]" )
function set_NBpoke() {
	NBpoke="$1"
}



# parse arguments
source milk-argparse
streamnameIN="${inputMSargARRAY[0]}"
streamnameOUT="${inputMSargARRAY[1]}"


echo ${streamnameOUT}

MILK_QUIET=1 milk << EOF

readshmim ${streamnameIN}
readshmim ${streamnameOUT}

# Activate processinfo
shmimcopy ..procinfo 1

# Run computation N times
shmimcopy ..loopcntMax ${NBpoke}

# Change triggermode to 3 : semaphore
shmimcopy ..triggermode 3

# set trigger sname
shmimcopy ..triggersname ${streamnameIN}

shmimcopy ${streamnameIN} ${streamnameOUT}
listim
exitCLI
EOF
